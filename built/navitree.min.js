!function(e){"use strict";if("object"==typeof module&&"object"==typeof module.exports)module.exports=e();else{var t=window||{};if(void 0===t.BeanFactory)t.BeanFactory=e();else{if(void 0===t.BeanFactory.Author||"pocmco"!==t.BeanFactory.Author)throw new Error("\nunexpected! \nproperty 'BeanFactory' already exists!\n");var o=t.beanFactory,n=e();o[t.BeanFactory.Version]=t.BeanFactory,o[n.Version]=n,t.BeanFactory=o}}}(function(){"use strict";var e=function(){for(var t=[],o=this,n=0;n<arguments.length;n++)t.push(arguments[n]);return new e.fn.init(o,t)};return e.isArrayLike=function(e){var t=!!e&&!("string"==typeof e||"number"==typeof e||"boolean"==typeof e)&&"length"in e&&e.length;return e instanceof Array||0===t||"number"==typeof t&&t>0&&t-1 in e},e.assembly=function(t,o,n){if(void 0!==t&&void 0!==o){if(e.isArrayLike(o)&&"function"!=typeof o)for(var r=0;r<o.length;r++)e.assembly(t,o[r],n);else if("object"==typeof o)for(var i in o)o.hasOwnProperty(i)&&(t[i]=o[i]);else if("function"==typeof o)if(void 0===n||null===n||"function"!=typeof n&&e.isArrayLike(n)&&0===n.length)n=o;else{var f=[n];f.push(o),n=f}if(void 0!==n&&("function"==typeof n||"function"!=typeof n&&e.isArrayLike(n)&&n.length>0))if("function"==typeof n)n.apply(t.prototype);else for(var a=0;a<n.length;a++)n[a].apply(t.prototype)}},e.fn=e.prototype={Version:"0.0.0",Author:"pomco",bean:function(){return e.fn.init.prototype=this.prototype,e.apply(this,arguments)},init:function(t,o){return e.assembly(t,o,null),this}},e.fn.init.prototype=e.fn,e}());
!function(e){"use strict";if("object"==typeof module&&"object"==typeof module.exports){var n=require("./../common/beanFactory.js");module.exports=e(n)}else{var t=window||{};if(void 0===t.BeanFactory)return new Error("unexpected! missing BeanFactory!");e(t.BeanFactory)}}(function(e){"use strict";if(void 0===e.treemodel){var n={};e.treemodel=n}var t={};return e.treemodel.jsontree=t,t.Author="pomco",t.Version="0.0.0",t.opt={_jsontree_depend:{JQ:""},_jsontree_data:{obj:{}},_jsontree_field:{nodeid:"nodeid",nodename:"",nodeself:"_self",parentnodename:"",url:"",displayname:""},_jsontree_render:{rootnode:"defaul_tree",treenode:"jsontree",a:{target:"_blank"}},_jsontree_tree_info:{tree:{},html:""}},t.setJQ=function(e){return t.isValidFieldData("JQ",e)&&(t.opt._jsontree_depend.JQ=e),this},t.setData=function(e){return t.isValidFieldData("obj",e)&&(t.opt._jsontree_data.obj=e),t.opt._jsontree_depend.JQ.each(["nodename","parentnodename","url","displayname"],function(e,n){t.isValidFieldData(n,t.opt._jsontree_field[n])||(t.opt._jsontree_field[n]="")}),t.isNecessaryDataOnReady()?t.opt._jsontree_depend.JQ(this).trigger("init_tree"):t.empty(),this},t.setNodeName=function(e){return t.isValidFieldData("nodename",e)&&(t.opt._jsontree_field.nodename=e),t.isNecessaryDataOnReady()&&t.opt._jsontree_depend.JQ(this).trigger("init_tree"),this},t.setNodeId=function(e){return t.isValidFieldData("nodeid",e)&&(t.opt._jsontree_field.nodeid=e),this},t.setNodeSelf=function(e){return t.isValidFieldData("nodeself",e)&&(t.opt._jsontree_field.nodeself=e),this},t.setParentNodeName=function(e){return t.isValidFieldData("parentnodename",e)&&(t.opt._jsontree_field.parentnodename=e),t.isNecessaryDataOnReady()&&t.opt._jsontree_depend.JQ(this).trigger("init_tree"),this},t.setUrl=function(e){return t.isValidFieldData("url",e)&&(t.opt._jsontree_field.url=e),t.isNecessaryDataOnReady()&&t.opt._jsontree_depend.JQ(this).trigger("init_tree"),this},t.setDisplayName=function(e){return t.isValidFieldData("displayname",e)&&(t.opt._jsontree_field.displayname=e),t.isNecessaryDataOnReady()&&t.opt._jsontree_depend.JQ(this).trigger("init_tree"),this},t.setRootNodeWhenRenderTree=function(e){return/^#/g.test(e)?t.opt._jsontree_render.rootnode=e:t.opt._jsontree_render.rootnode="string"==typeof e&&""!==e?"#"+e:t.opt._jsontree_render.rootnode,t.isNecessaryDataOnReady()&&t.opt._jsontree_depend.JQ(this).trigger("init_tree"),this},t.setTreeNodeWhenRenderTree=function(e){return/^\./g.test(e)||(t.opt._jsontree_render.treenode="string"==typeof e&&""!==e?e:t.opt._jsontree_render.treenode),this},t.setTargetWhenOnclickUrl=function(e){return t.isValidFieldData("target",e)&&(t.opt._jsontree_render.a.target=e),t.isNecessaryDataOnReady()&&t.opt._jsontree_depend.JQ(this).trigger("init_tree"),this},t.setTree=function(e){return t.isValidFieldData("tree",e)&&(t.opt._jsontree_tree_info.tree=e),this},t.setHtml=function(e){return t.isValidFieldData("html",e)&&(t.opt._jsontree_tree_info.html=e),this},t.findParent=function(e,n,t){for(var r=0;r<e.length;r++)if(e[r][t._jsontree_field.nodename]===n[t._jsontree_field.parentnodename])return e[r]},t.familytree=function(e,n,r,o){if(""!==n[o._jsontree_field.parentnodename])for(var d=0;d<e.length;d++)if(e[d][o._jsontree_field.nodename]===n[o._jsontree_field.parentnodename]){r.unshift(n[o._jsontree_field.parentnodename]+"_"+e[d][o._jsontree_field.nodeid]),t.familytree(e,e[d],r,o);break}},t.empty=function(){var e=t.opt._jsontree_depend.JQ,n=t.opt._jsontree_render.rootnode;t.setTree({}),t.setHtml(""),e(n).empty()},t.isMutexOfElements=function(e,n){var r={check:!0,err:""};switch(e){case"nodename":r.check=t.opt._jsontree_field.parentnodename!==n,r.check||(r.err=new Error("\nNot Recommend to assign the same value of the field ('parentnodename' which been assigned by parent())  to nodename ! \n"));break;case"parentnodename":r.check=t.opt._jsontree_field.nodename!==n,r.check||(r.err=new Error("\nNot Recommend to assign the same value of the field ('nodename' which been assigned by child())  to parentnodename ! \n"));break;default:r.check=!0}return r},t.isInObject=function(e,n){var r={check:!1,err:""},o=t.opt._jsontree_depend.JQ;for(var d in e)if(e.hasOwnProperty(d)&&"object"===o.type(e[d])){if(!e[d].hasOwnProperty(n)){r.check=!1,r.err=new Error("\nthe key : '"+n+"' not in the object:'"+e[d]+"'.\n");break}r.check=!0}return r},t.isDeadLoop=function(e,n){var r={check:!1,err:""},o=t.opt._jsontree_depend.JQ,d=t.opt._jsontree_data.obj,s=t.opt._jsontree_field.nodename,i=t.opt._jsontree_field.parentnodename;switch(e){case"obj":d=n;break;case"nodename":s=n;break;case"parentnodename":i=n}if(t.isInObject(d,s).check&&t.isInObject(d,i).check)for(var a in d)if(d.hasOwnProperty(a)&&"object"===o.type(d[a])){var _=[];if(_.push(d[a][s]),_.push(d[a][i]),r=t.isDeadLoopCheck(d,d[a],s,i,_),r.check)break}return r},t.isDeadLoopCheck=function(e,n,r,o,d){var s={check:!1,err:""},i=t.opt._jsontree_depend.JQ;for(var a in e)if(e.hasOwnProperty(a)&&"object"===i.type(e[a])&&"object"===i.type(n)&&e[a][r]===n[o]){d.push(e[a][r]),d.push(e[a][o]),d.length>1&&(d[0]===d[d.length-1]?(s.check=!0,s.err=new Error("\nunexpected assignment! maybe casule deep loop.\n")):s=t.isDeadLoopCheck(e,e[a],r,o,d));break}return s},t.isValidFieldData=function(e,n){var r={check:!1,err:""};switch(e){case"JQ":r.check=void 0!==n.fn.jquery;break;case"obj":r.check="object"==typeof n&&!t.isDeadLoop(e,n).check;break;case"nodename":case"parentnodename":r.check=!("string"!=typeof n||""===n||!t.isInObject(t.opt._jsontree_data.obj,n).check||!t.isMutexOfElements(e,n).check||t.isDeadLoop(e,n).check);break;case"nodeid":r.check=("string"==typeof n||"number"==typeof n)&&""!==n;break;case"url":case"displayname":r.check=!("string"!=typeof n||""===n||!t.isInObject(t.opt._jsontree_data.obj,n).check);break;case"nodeself":case"target":r.check="string"==typeof n&&""!==n;break;case"tree":var o=t.opt._jsontree_depend.JQ;r.check="object"===o.type(n);break;case"html":r.check="string"==typeof n;break;default:r.check=!1}return r.check||(r.err=new Error("\n unexpected assignment for "+e+" !\n")),r.check},t.isNecessaryDataOnReady=function(){var e=!1;return void 0!==t.opt._jsontree_depend.JQ&&""!==t.opt._jsontree_depend.JQ&&void 0!==t.opt._jsontree_depend.JQ.fn.jquery||(e=new Error("\nunexpected!\n missing jQuery!\n")),""!==t.opt._jsontree_field.nodename&&""!==t.opt._jsontree_field.parentnodename||(e=new Error("\nunexpected!\n missing assignment for 'nodename' which represent as child re or 'parentnodename' which represent as parent!\n")),""===t.opt._jsontree_field.nodeid&&(e=new Error("\n Not recommended!\n missing assignment for 'nodeid' which represent as unique identification for a record!\n")),""===t.opt._jsontree_field.displayname&&(""!==t.opt._jsontree_field.nodename?t.setDisplayName(t.opt._jsontree_field.nodename):e=new Error("\nunexpected!\n missing assignment for 'displayname' which represent as displayname on page!\n")),void 0!==t.opt._jsontree_render.rootnode&&""!==t.opt._jsontree_render.rootnode||(e=new Error("\nunexpected!\n missing assignment for 'rootnode' which represent as the root when render a tree\n")),!e},t.init=function(){if(t.empty(),t.isNecessaryDataOnReady()){for(var e={},n=[],r=t.opt._jsontree_data.obj,o=t.opt,d=t.opt._jsontree_depend.JQ,s=t.opt._jsontree_render.rootnode,i=0;i<r.length;i++)"object"!=typeof r[i]||r[i].hasOwnProperty("nodeid")||(r[i].nodeid=i+1);for(var a=0;a<r.length;a++)t.familytree(r,r[a],n,o),t.maketree(d,e,r[a],n,o);d(s).empty(),t.render(d,e,r,o),t.setTree(e),t.setHtml(d(s).html())}},t.maketree=function(e,n,r,o,d){if(o.length>0){var s=o.shift();n.hasOwnProperty(s)?o.length>0?t.maketree(e,n[s],r,o,d):(n[s].hasOwnProperty(r[d._jsontree_field.nodename]+"_"+r[d._jsontree_field.nodeid])||(n[s][r[d._jsontree_field.nodename]+"_"+r[d._jsontree_field.nodeid]]={}),n[s][r[d._jsontree_field.nodename]+"_"+r[d._jsontree_field.nodeid]][d._jsontree_field.nodeself]=r):(n[s]={},o.length>0?t.maketree(e,n[s],r,o,d):(n[s][r[d._jsontree_field.nodename]+"_"+r[d._jsontree_field.nodeid]]={},n[s][r[d._jsontree_field.nodename]+"_"+r[d._jsontree_field.nodeid]][d._jsontree_field.nodeself]=r))}else n.hasOwnProperty(r[d._jsontree_field.nodename]+"_"+r[d._jsontree_field.nodeid])||(n[r[d._jsontree_field.nodename]+"_"+r[d._jsontree_field.nodeid]]={}),n[r[d._jsontree_field.nodename]+"_"+r[d._jsontree_field.nodeid]][d._jsontree_field.nodeself]=r;return this},t.render=function(e,n,r,o){if(null!==n)for(var d in n)if(n.hasOwnProperty(d)){var s="";if(d===o._jsontree_field.nodeself)continue;if(n[d].hasOwnProperty(o._jsontree_field.nodeself)){var i=/\(|\)/g,a="";i.test(n[d][o._jsontree_field.nodeself][o._jsontree_field.nodename])?(a=n[d][o._jsontree_field.nodeself][o._jsontree_field.nodename].replace(/\(/,"（"),a=a.replace(/\)/,"）")):a=n[d][o._jsontree_field.nodeself][o._jsontree_field.nodename],s+='<li id="jsontree_li_'+a+n[d][o._jsontree_field.nodeself][o._jsontree_field.nodeid]+'">',""===n[d][o._jsontree_field.nodeself][o._jsontree_field.url]?(s+='<a id="jsontree_a_'+a+n[d][o._jsontree_field.nodeself][o._jsontree_field.nodeid]+'" ',s+='<a title="'+n[d][o._jsontree_field.nodeself][o._jsontree_field.nodename]+'" ',s+='href="#'+a+n[d][o._jsontree_field.nodeself][o._jsontree_field.nodeid]+'">'):(s+='<a id="jsontree_a_'+a+n[d][o._jsontree_field.nodeself][o._jsontree_field.nodeid]+'" ',s+='title="'+n[d][o._jsontree_field.nodeself][o._jsontree_field.nodename]+'" ',s+='href="'+n[d][o._jsontree_field.nodeself][o._jsontree_field.url]+'" ',s+='url="'+n[d][o._jsontree_field.nodeself][o._jsontree_field.url]+'" ',s+='target="'+o._jsontree_render.a.target+'">'),s+='<label for="jsontree_label_'+a+n[d][o._jsontree_field.nodeself][o._jsontree_field.nodeid]+'">'+n[d][o._jsontree_field.nodeself][o._jsontree_field.displayname]+"</label>",s+="</a></li>";var _=o._jsontree_render.rootnode,l=o._jsontree_render.treenode,f=t.findParent(r,n[d][o._jsontree_field.nodeself],o);if(""===n[d][o._jsontree_field.nodeself][o._jsontree_field.parentnodename]||void 0===f)o._jsontree_depend.JQ.find(_).length<=0&&o._jsontree_depend.JQ("html>body").append('<div id="'+_.replace(/^#/,"")+'"></div>'),e(_+">ul").length<=0&&e(_).append('<ul class="'+l+'"></ul>'),e(_+">ul").append(s);else{var p=void 0!==f?f[o._jsontree_field.nodeid]:"",c="",j=/\(|\)/g;j.test(n[d][o._jsontree_field.nodeself][o._jsontree_field.parentnodename])?(c=n[d][o._jsontree_field.nodeself][o._jsontree_field.parentnodename].replace(/\(/,"（"),c=c.replace(/\)/,"）")):c=n[d][o._jsontree_field.nodeself][o._jsontree_field.parentnodename],e("#jsontree_li_"+c+p+">ul").length<=0&&e("#jsontree_li_"+c+p+">a").after("<ul></ul>"),e("#jsontree_li_"+c+p+">ul").append(s)}}t.render(e,n[d],r,o)}return this},t.tree=function(){return t.opt._jsontree_tree_info.tree},t.tree.toString=function(){return t.opt._jsontree_tree_info.html},t});
!function(e){"use strict";if("object"==typeof module&&"object"==typeof module.exports){var t=require("jsdom").jsdom,r=t(""),n=r.defaultView,o=require("jquery")(n),i=require("./lib/common/beanFactory.js");require("./lib/treemodel/jsontree.js");var s={BeanFactory:i,JQ:o};module.exports=e(s)}else{var a={},d=window||{};if(void 0===d.jQuery)throw new Error("unexpected! missing jQuery!");if(a={BeanFactory:d.BeanFactory,JQ:d.jQuery},void 0===d.navitree)d.navitree=e(a);else{if(void 0===d.navitree.Author||"pocmco"!==d.navitree.Author)throw new Error("\nunexpected! \nproperty 'navitree' already exists!\n");var u=d.navitree,h=e(a);u[d.navitree.Version]=d.navitree,u[h.Version]=h,d.navitree=u}}}(function(){"use strict";var e=function(){for(var t=[],r={},n=0;n<arguments.length;n++)"object"==typeof arguments[n]&&arguments[n].hasOwnProperty("BeanFactory")&&(r=arguments[n].BeanFactory),t.push(arguments[n]);return t.push(function(){e.extend("jsontree",r.treemodel.jsontree),e.jsontree.setJQ(e.JQ),e.JQ(this).on("init_tree",e.jsontree.init)}),t.push(function(){e.JQ.extend(!0,this,{extend:e.extend})}),t.push(function(){e.JQ.extend(!0,this,{data:e.jsontree.setData}),e.JQ.extend(!0,this,{tree:e.jsontree.tree}),e.JQ.extend(!0,this,{html:e.jsontree.tree.toString}),e.JQ.extend(!0,this,{child:e.jsontree.setNodeName}),e.JQ.extend(!0,this,{parent:e.jsontree.setParentNodeName}),e.JQ.extend(!0,this,{url:e.jsontree.setUrl}),e.JQ.extend(!0,this,{menuName:e.jsontree.setDisplayName}),e.JQ.extend(!0,this,{render:e.jsontree.setRootNodeWhenRenderTree}),e.JQ.extend(!0,this,{iframeName:e.jsontree.setTargetWhenOnclickUrl})}),r.bean.apply(e,t)};return e.fn=e.prototype={Version:"0.0.0",Author:"pomco"},e.extend=function(t,r){var n={};return void 0===n[t]&&(n[t]=r),e.JQ.extend(!0,this,n),this},e}());
//# sourceMappingURL=data:application/json;charset=utf8;base64,
